<?php
/*
 * To change this template, choose Tools | Templates
* and open the template in the editor.
*/

class Ccbtemplate_model extends CI_Model {
    public $config=array();
    function __construct()
    {
            parent::__construct();
    }
	
    function send_mail($send_details = array('')){
    	
		$email = $this->get_email_values();
		if(count($email)>0){
			$this->setConnection();
			$this->load->library('email', $this->config);
			$this->email->set_newline("\r\n");
			$send_details['attach'];
			if(count($send_details)=='0'){
				$msg_str='Hi,<br><br>
				Your recent email settings are working fine. You can start using this email settings while creating alert conditions or sending reports etc.<br><br>
				Regards';
				$this->email->from($email->EMAIL,$email->NAME);
				$this->email->to($email->DEFAULT_SENDER);
				$this->email->subject('Test mail generated by SUREedge on '.date('d/m/y h:i:s'));			
				$this->email->message($msg_str);
				$this->email->send();
			}else{
				$this->email->from($email->EMAIL, $email->NAME);
				$this->email->to($send_details['to']);
				$this->email->subject($send_details['subject']);
				$this->email->message($send_details['message']);
				foreach($send_details['attach'] as $value){					
				   $this->email->attach($value);
			    }
			    $this->email->send();			
			}
			return true;
		}else{
			return false;
		}
	}
	
	function setConnection(){
		$mail = $this->get_email_values();		
		$conn = strtolower($mail->SMTP_SECURITY_CONNECTION);
		$smptp_port = $mail->SMTP_PORT;
		$smtp_user = $mail->SMTP_USERNAME;
		$server_name =  $mail->SMTP_SERVER_NAME;
		$host = $conn."://".$server_name;
		$smtp_pass = $this->encrypt->decode($mail->SMTP_PASSWORD);
		
		$this->config = Array(
				'protocol' => 'smtp',
				'smtp_host' => $host,
				'smtp_port' => $smptp_port,
				'smtp_user' => $smtp_user,
				'smtp_pass' => $smtp_pass,
				'mailtype'=>'html'
		);
		
	}
	function testMail(){
		
			$email = $this->get_email_values();
			$this->setConnection();
			$this->load->library('email', $this->config);
			$this->email->set_newline("\r\n"); /* for some reason it is needed */
			$msg_str='Hi,<br><br>
			Your recent email settings are working fine. You can start using this email settings while creating alert conditions or sending reports etc.<br><br>
			Regards';
			$this->email->from($email->EMAIL,$email->NAME);
			$this->email->to($email->DEFAULT_SENDER);
			$this->email->subject('Test mail generated by SUREedge on '.date('d/m/y h:i:s'));			
			$this->email->message($msg_str);				
			if($this->email->send()){
				return true;
			}else{
				return false;
			}
		    
	}
	
	function addData($data){
        if($this->get_total_email_count()==0){
           $this->db->insert('ss_email_settings', $data);
	    }else{
	    	$id = $this->get_email_row_id();
	    	$this->db->where('id', $id);
	    	$this->db->update('ss_email_settings', $data);
	    }
	}

	function get_email_values(){
		$this->db->select('*');
		$this->db->from('ss_email_settings');
		$query = $this->db->get();
		$result = $query->row();
		return $result;
	}
	
	function get_total_email_count(){
		$this->db->select('*');
		$this->db->from('ss_email_settings');
		$query = $this->db->get();
		$result = $query->num_rows();
		return $result;
	}
	
	function get_email_row_id(){
		$this->db->select('*');
		$this->db->from('ss_email_settings');
		$query = $this->db->get();
		$result = $query->row();				
		return $result->ID;
	}
	
	function isEmailConfigured(){
		if($this->get_total_email_count()>0){
			return true;
		}else{
		   return false;
		}
	}
	function getDefaultSender(){
		$this->db->select('*');
		$this->db->from('ss_email_settings');
		$query = $this->db->get();
		$result = $query->row();
		$count = $query->num_rows();
		if($count>0){
		   return $result->DEFAULT_SENDER;
		}else{
			return '';
		}
	}
	
	function sendCcbMail($data){
            
		$email = $this->get_email_values();
		$this->setConnection();
		$this->load->library('email', $this->config);
		$this->email->set_newline("\r\n"); /* for some reason it is needed */
		
                $subject = '';
                $str = '';
                $str="<b>Bug ID:</b> ".$data['bugid'];
                $str.='<br><br>';
                $str.="<b>Severity:</b> ".$data['severity'];
                $str.='<br><br>';
                $str.="<b>Small description of the limitation due to this bug: </b>".str_replace( array("\n","\r"), '<br>', $data['small_desc'] ); 
                $str.='<br><br>';
                $str.="<b>Small description of the fix, what is changed and how: </b>".str_replace( array("\n","\r"), '<br>', $data['fixed_desc'] );
                $str.='<br><br>';
                $str.="<b>Tests done so far to verify: </b>".str_replace( array("\n","\r"), '<br>', $data['test_done'] );
                $str.='<br><br>';
                $str.="<b>Tests to be done to verify the fix: </b>".str_replace( array("\n","\r"), '<br>', $data['test_to_be_done'] ) ;
                $str.='<br><br>';
                $str.="<b>Code Reviewer: </b>".$data["code_reviewer"];
                $str.='<br><br>';
                $str.=$data['regards'];

                $subject = "Approval for code checkin for bug id".$data['bugid'];
                $to = $data['send_to'];
                $cc = $data['cc'];
                
		//$this->email->from('deepak@surelinesystems.com', 'Deepak');
                $this->email->from($email->EMAIL,$email->NAME);
                $this->email->to($to);
                $this->email->cc($cc);
		$this->email->subject($subject);
		$this->email->message($str);
		if($this->email->send()){
			return true;
		}else{
			return false;
		}
	
	}
        
        function getAlertConditionMonitorTypeData($typeid){                        
            $this->db->select('ss_alert_condition.SEVERITY,ss_alert_condition.OWNER,ss_alert_condition.NAME as alert_condition_name,
            ss_alert_condition.Email,
            ss_alert_monitor.NAME as monitor_name,ss_alert_monitor.MODULE as module_name,ss_alert_monitor.SOURCE as source,
            ss_alert_type.NAME as alert_type_name,ss_alert_type.DESCRIPTION,ss_alert_type.REMEDY,
            ss_alert_parameter.NAME as param_name,ss_alert_parameter.VALUE as param_value,ss_alert_parameter.OPERATOR as param_operator');
            $this->db->from('ss_alert_condition');
            $this->db->join('ss_alert_monitor', 'ss_alert_condition.ALERT_TYPE_ID = ss_alert_monitor.ID');
            $this->db->join('ss_alert_type', 'ss_alert_condition.ALERT_TYPE_ID = ss_alert_type.ID ');            
            $this->db->where('ss_alert_condition.ALERT_TYPE_ID',$typeid);
            $this->db->join('ss_alert_parameter', 'ss_alert_condition.ID = ss_alert_parameter.ALERT_COND_ID');
            $query = $this->db->get();
            $result = $query->row();
            return $result;
        }
        
        function sendAlertMail($alert){
	
		$email = $this->get_email_values();
		$this->setConnection();
		$this->load->library('email', $this->config);
		$this->email->set_newline("\r\n"); /* for some reason it is needed */
		$msg_str='Hi,<br><br>';
		$msg_str.='Alert details are as follows,<br><br>';
		
		$str = '';
                $condition = $alert->param_name." ".$alert->param_operator." ".$alert->param_value;
                    $str.='<b>Owner</b> : '.$alert->OWNER;$str.='<br>';
                    $str.='<b>Monitor Name</b> : '.$alert->monitor_name;$str.='<br>';
                    $str.='<b>Module</b> : '.$alert->module_name;$str.='<br>';
                    $str.='<b>Source</b>  : '.$alert->source;$str.='<br>';
                    $str.='<b>Severity</b> :'.$alert->SEVERITY;$str.='<br>';
                    $str.='<b>Alert Condition</b> :'.$condition;$str.='<br>';
                    $str.='<b>Alert Type Name</b> :'.$alert->alert_type_name;$str.='<br>';
                    $str.='<b>Description</b> :'.$alert->DESCRIPTION;$str.='<br>';
                    $str.='<b>Remedy</b> :'.$alert->REMEDY;$str.='<br>';
                
               
		$msg_str='Hi,<br><br>';
		$msg_str.='Alert details are as follows,<br><br>';
                $msg_str.= $str;
		$msg_str.="<br>You are subscribed to receive email of Alert Support.<br>
                  If you have any questions or do not wish to receive these emails, please contact SUREedge administrator<br>
                 Regards";
		$this->email->from($email->EMAIL,$email->NAME);
		$this->email->to($alert->Email);
		$this->email->subject('SUREedge: Alert Details');
		$this->email->message($msg_str);
		if($this->email->send()){
			return true;
		}else{
			return false;
		}
	}
        
        function getAbortConditionJobData($jobid){
            $this->db->select('view_all_jobs.id as id,
                view_all_jobs.name as name,
                view_all_jobs.type as type,
                view_all_jobs.owner as owner,
                view_all_jobs.status as status,
                view_all_jobs.server_name as server_name');
	    $this->db->from('view_all_jobs');
	    //$this->db->where('status =', 'Aborted');
	    $this->db->where('view_all_jobs.id =', $jobid);
	    $query = $this->db->get();            
	    return $query->row();

        }
  
        function sendAbortJobMail($data){
	
		$email = $this->get_email_values();
		$this->setConnection();
		$this->load->library('email', $this->config);
		$this->email->set_newline("\r\n"); /* for some reason it is needed */
		$msg_str='Hi,<br><br>';
		$msg_str.='Job details are as follows,<br><br>';                
		$subject = 'SUREedge: Task  Aborted';
                
                
		if(count($data)>0){
			$type = $data['Type:'];
			$this->db->select('*');
			$this->db->from('ss_job_types');
			$this->db->where('TYPE',$type);
			$query = $this->db->get();
			$query = $query->row();
			$data['Type:'] = $query->DESC;
			foreach($data as $key=>$value){				
				$msg_str .=$key." ".$value;
				$msg_str .="<br>";
			}
		}
		$msg_str.="<br>You are subscribed to receive email alerts of job execution status.<br>
                   If you have any questions or do not wish to receive these emails, please contact SUREedge administrator<br>
                   Regards";
		$this->email->from($email->EMAIL,$email->NAME);
		$this->email->to($email->DEFAULT_SENDER);
		$this->email->subject($subject);
		$this->email->message($msg_str);
		if($this->email->send()){
			return true;
		}else{
			return false;
		}
	
	}
        
}
?>